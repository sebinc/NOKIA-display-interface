
# 1 "X:\EMBBEDED PROJECTS\Vaisakh\mplab\main.c"

# 19 "C:\Program Files (x86)\HI-TECH Software\PICC\PRO\9.65\include\pic168xa.h"
volatile unsigned char INDF @ 0x00;
volatile unsigned char TMR0 @ 0x01;
volatile unsigned char PCL @ 0x02;
volatile unsigned char STATUS @ 0x03;
unsigned char FSR @ 0x04;
volatile unsigned char PORTA @ 0x05;
volatile unsigned char PORTB @ 0x06;
volatile unsigned char PORTC @ 0x07;

volatile unsigned char PORTD @ 0x08;
volatile unsigned char PORTE @ 0x09;

unsigned char PCLATH @ 0x0A;
volatile unsigned char INTCON @ 0x0B;
volatile unsigned char PIR1 @ 0x0C;
volatile unsigned char PIR2 @ 0x0D;
volatile unsigned char TMR1L @ 0x0E;
volatile unsigned char TMR1H @ 0x0F;
volatile unsigned char T1CON @ 0x10;
volatile unsigned char TMR2 @ 0x11;
volatile unsigned char T2CON @ 0x12;
volatile unsigned char SSPBUF @ 0x13;
volatile unsigned char SSPCON @ 0x14;
volatile unsigned char CCPR1L @ 0x15;
volatile unsigned char CCPR1H @ 0x16;
volatile unsigned char CCP1CON @ 0x17;
volatile unsigned char RCSTA @ 0x18;
volatile unsigned char TXREG @ 0x19;
volatile unsigned char RCREG @ 0x1A;
volatile unsigned char CCPR2L @ 0x1B;
volatile unsigned char CCPR2H @ 0x1C;
volatile unsigned char CCP2CON @ 0x1D;
volatile unsigned char ADRESH @ 0x1E;
volatile unsigned char ADCON0 @ 0x1F;


unsigned char OPTION @ 0x81;
volatile unsigned char TRISA @ 0x85;
volatile unsigned char TRISB @ 0x86;
volatile unsigned char TRISC @ 0x87;

volatile unsigned char TRISD @ 0x88;
volatile unsigned char TRISE @ 0x89;

volatile unsigned char PIE1 @ 0x8C;
volatile unsigned char PIE2 @ 0x8D;
volatile unsigned char PCON @ 0x8E;
volatile unsigned char SSPCON2 @ 0x91;
volatile unsigned char PR2 @ 0x92;
volatile unsigned char SSPADD @ 0x93;
volatile unsigned char SSPSTAT @ 0x94;
volatile unsigned char TXSTA @ 0x98;
volatile unsigned char SPBRG @ 0x99;
volatile unsigned char CMCON @ 0x9C;
volatile unsigned char CVRCON @ 0x9D;
volatile unsigned char ADRESL @ 0x9E;
volatile unsigned char ADCON1 @ 0x9F;


volatile unsigned char EEDATA @ 0x10C;
volatile unsigned char EEADR @ 0x10D;

volatile unsigned char EEADRL @ 0x10D;
volatile unsigned char EEDATH @ 0x10E;
volatile unsigned char EEADRH @ 0x10F;


volatile unsigned char EECON1 @ 0x18C;
volatile unsigned char EECON2 @ 0x18D;


volatile bit IRP @ (unsigned)&STATUS*8+7;
volatile bit RP1 @ (unsigned)&STATUS*8+6;
volatile bit RP0 @ (unsigned)&STATUS*8+5;
volatile bit TO @ (unsigned)&STATUS*8+4;
volatile bit PD @ (unsigned)&STATUS*8+3;
volatile bit ZERO @ (unsigned)&STATUS*8+2;
volatile bit DC @ (unsigned)&STATUS*8+1;
volatile bit CARRY @ (unsigned)&STATUS*8+0;


volatile bit RA5 @ (unsigned)&PORTA*8+5;
volatile bit RA4 @ (unsigned)&PORTA*8+4;
volatile bit RA3 @ (unsigned)&PORTA*8+3;
volatile bit RA2 @ (unsigned)&PORTA*8+2;
volatile bit RA1 @ (unsigned)&PORTA*8+1;
volatile bit RA0 @ (unsigned)&PORTA*8+0;


volatile bit RB7 @ (unsigned)&PORTB*8+7;
volatile bit RB6 @ (unsigned)&PORTB*8+6;
volatile bit RB5 @ (unsigned)&PORTB*8+5;
volatile bit RB4 @ (unsigned)&PORTB*8+4;
volatile bit RB3 @ (unsigned)&PORTB*8+3;
volatile bit RB2 @ (unsigned)&PORTB*8+2;
volatile bit RB1 @ (unsigned)&PORTB*8+1;
volatile bit RB0 @ (unsigned)&PORTB*8+0;


volatile bit RC7 @ (unsigned)&PORTC*8+7;
volatile bit RC6 @ (unsigned)&PORTC*8+6;
volatile bit RC5 @ (unsigned)&PORTC*8+5;
volatile bit RC4 @ (unsigned)&PORTC*8+4;
volatile bit RC3 @ (unsigned)&PORTC*8+3;
volatile bit RC2 @ (unsigned)&PORTC*8+2;
volatile bit RC1 @ (unsigned)&PORTC*8+1;
volatile bit RC0 @ (unsigned)&PORTC*8+0;



volatile bit RD7 @ (unsigned)&PORTD*8+7;
volatile bit RD6 @ (unsigned)&PORTD*8+6;
volatile bit RD5 @ (unsigned)&PORTD*8+5;
volatile bit RD4 @ (unsigned)&PORTD*8+4;
volatile bit RD3 @ (unsigned)&PORTD*8+3;
volatile bit RD2 @ (unsigned)&PORTD*8+2;
volatile bit RD1 @ (unsigned)&PORTD*8+1;
volatile bit RD0 @ (unsigned)&PORTD*8+0;


volatile bit RE2 @ (unsigned)&PORTE*8+2;
volatile bit RE1 @ (unsigned)&PORTE*8+1;
volatile bit RE0 @ (unsigned)&PORTE*8+0;



volatile bit GIE @ (unsigned)&INTCON*8+7;
volatile bit PEIE @ (unsigned)&INTCON*8+6;
volatile bit T0IE @ (unsigned)&INTCON*8+5;
volatile bit INTE @ (unsigned)&INTCON*8+4;
volatile bit RBIE @ (unsigned)&INTCON*8+3;
volatile bit T0IF @ (unsigned)&INTCON*8+2;
volatile bit INTF @ (unsigned)&INTCON*8+1;
volatile bit RBIF @ (unsigned)&INTCON*8+0;

volatile bit TMR0IE @ (unsigned)&INTCON*8+5;
volatile bit TMR0IF @ (unsigned)&INTCON*8+2;



volatile bit PSPIF @ (unsigned)&PIR1*8+7;

volatile bit ADIF @ (unsigned)&PIR1*8+6;
volatile bit RCIF @ (unsigned)&PIR1*8+5;
volatile bit TXIF @ (unsigned)&PIR1*8+4;
volatile bit SSPIF @ (unsigned)&PIR1*8+3;
volatile bit CCP1IF @ (unsigned)&PIR1*8+2;
volatile bit TMR2IF @ (unsigned)&PIR1*8+1;
volatile bit TMR1IF @ (unsigned)&PIR1*8+0;


volatile bit CMIF @ (unsigned)&PIR2*8+6;
volatile bit EEIF @ (unsigned)&PIR2*8+4;
volatile bit BCLIF @ (unsigned)&PIR2*8+3;
volatile bit CCP2IF @ (unsigned)&PIR2*8+0;


volatile bit T1CKPS1 @ (unsigned)&T1CON*8+5;
volatile bit T1CKPS0 @ (unsigned)&T1CON*8+4;
volatile bit T1OSCEN @ (unsigned)&T1CON*8+3;
volatile bit T1SYNC @ (unsigned)&T1CON*8+2;
volatile bit TMR1CS @ (unsigned)&T1CON*8+1;
volatile bit TMR1ON @ (unsigned)&T1CON*8+0;


volatile bit TOUTPS3 @ (unsigned)&T2CON*8+6;
volatile bit TOUTPS2 @ (unsigned)&T2CON*8+5;
volatile bit TOUTPS1 @ (unsigned)&T2CON*8+4;
volatile bit TOUTPS0 @ (unsigned)&T2CON*8+3;
volatile bit TMR2ON @ (unsigned)&T2CON*8+2;
volatile bit T2CKPS1 @ (unsigned)&T2CON*8+1;
volatile bit T2CKPS0 @ (unsigned)&T2CON*8+0;


volatile bit WCOL @ (unsigned)&SSPCON*8+7;
volatile bit SSPOV @ (unsigned)&SSPCON*8+6;
volatile bit SSPEN @ (unsigned)&SSPCON*8+5;
volatile bit CKP @ (unsigned)&SSPCON*8+4;
volatile bit SSPM3 @ (unsigned)&SSPCON*8+3;
volatile bit SSPM2 @ (unsigned)&SSPCON*8+2;
volatile bit SSPM1 @ (unsigned)&SSPCON*8+1;
volatile bit SSPM0 @ (unsigned)&SSPCON*8+0;


volatile bit CCP1X @ (unsigned)&CCP1CON*8+5;
volatile bit CCP1Y @ (unsigned)&CCP1CON*8+4;
volatile bit CCP1M3 @ (unsigned)&CCP1CON*8+3;
volatile bit CCP1M2 @ (unsigned)&CCP1CON*8+2;
volatile bit CCP1M1 @ (unsigned)&CCP1CON*8+1;
volatile bit CCP1M0 @ (unsigned)&CCP1CON*8+0;


volatile bit SPEN @ (unsigned)&RCSTA*8+7;
volatile bit RX9 @ (unsigned)&RCSTA*8+6;
volatile bit SREN @ (unsigned)&RCSTA*8+5;
volatile bit CREN @ (unsigned)&RCSTA*8+4;
volatile bit ADDEN @ (unsigned)&RCSTA*8+3;
volatile bit FERR @ (unsigned)&RCSTA*8+2;
volatile bit OERR @ (unsigned)&RCSTA*8+1;
volatile bit RX9D @ (unsigned)&RCSTA*8+0;


volatile bit CCP2X @ (unsigned)&CCP2CON*8+5;
volatile bit CCP2Y @ (unsigned)&CCP2CON*8+4;
volatile bit CCP2M3 @ (unsigned)&CCP2CON*8+3;
volatile bit CCP2M2 @ (unsigned)&CCP2CON*8+2;
volatile bit CCP2M1 @ (unsigned)&CCP2CON*8+1;
volatile bit CCP2M0 @ (unsigned)&CCP2CON*8+0;


volatile bit ADCS1 @ (unsigned)&ADCON0*8+7;
volatile bit ADCS0 @ (unsigned)&ADCON0*8+6;
volatile bit CHS2 @ (unsigned)&ADCON0*8+5;
volatile bit CHS1 @ (unsigned)&ADCON0*8+4;
volatile bit CHS0 @ (unsigned)&ADCON0*8+3;
volatile bit ADGO @ (unsigned)&ADCON0*8+2;

volatile bit GODONE @ (unsigned)&ADCON0*8+2;
volatile bit ADON @ (unsigned)&ADCON0*8+0;


bit RBPU @ (unsigned)&OPTION*8+7;
bit INTEDG @ (unsigned)&OPTION*8+6;
bit T0CS @ (unsigned)&OPTION*8+5;
bit T0SE @ (unsigned)&OPTION*8+4;
bit PSA @ (unsigned)&OPTION*8+3;
bit PS2 @ (unsigned)&OPTION*8+2;
bit PS1 @ (unsigned)&OPTION*8+1;
bit PS0 @ (unsigned)&OPTION*8+0;


volatile bit TRISA5 @ (unsigned)&TRISA*8+5;
volatile bit TRISA4 @ (unsigned)&TRISA*8+4;
volatile bit TRISA3 @ (unsigned)&TRISA*8+3;
volatile bit TRISA2 @ (unsigned)&TRISA*8+2;
volatile bit TRISA1 @ (unsigned)&TRISA*8+1;
volatile bit TRISA0 @ (unsigned)&TRISA*8+0;


volatile bit TRISB7 @ (unsigned)&TRISB*8+7;
volatile bit TRISB6 @ (unsigned)&TRISB*8+6;
volatile bit TRISB5 @ (unsigned)&TRISB*8+5;
volatile bit TRISB4 @ (unsigned)&TRISB*8+4;
volatile bit TRISB3 @ (unsigned)&TRISB*8+3;
volatile bit TRISB2 @ (unsigned)&TRISB*8+2;
volatile bit TRISB1 @ (unsigned)&TRISB*8+1;
volatile bit TRISB0 @ (unsigned)&TRISB*8+0;


volatile bit TRISC7 @ (unsigned)&TRISC*8+7;
volatile bit TRISC6 @ (unsigned)&TRISC*8+6;
volatile bit TRISC5 @ (unsigned)&TRISC*8+5;
volatile bit TRISC4 @ (unsigned)&TRISC*8+4;
volatile bit TRISC3 @ (unsigned)&TRISC*8+3;
volatile bit TRISC2 @ (unsigned)&TRISC*8+2;
volatile bit TRISC1 @ (unsigned)&TRISC*8+1;
volatile bit TRISC0 @ (unsigned)&TRISC*8+0;



volatile bit TRISD7 @ (unsigned)&TRISD*8+7;
volatile bit TRISD6 @ (unsigned)&TRISD*8+6;
volatile bit TRISD5 @ (unsigned)&TRISD*8+5;
volatile bit TRISD4 @ (unsigned)&TRISD*8+4;
volatile bit TRISD3 @ (unsigned)&TRISD*8+3;
volatile bit TRISD2 @ (unsigned)&TRISD*8+2;
volatile bit TRISD1 @ (unsigned)&TRISD*8+1;
volatile bit TRISD0 @ (unsigned)&TRISD*8+0;


volatile bit IBF @ (unsigned)&TRISE*8+7;
volatile bit OBF @ (unsigned)&TRISE*8+6;
volatile bit IBOV @ (unsigned)&TRISE*8+5;
volatile bit PSPMODE @ (unsigned)&TRISE*8+4;

volatile bit TRISE2 @ (unsigned)&TRISE*8+2;
volatile bit TRISE1 @ (unsigned)&TRISE*8+1;
volatile bit TRISE0 @ (unsigned)&TRISE*8+0;




volatile bit PSPIE @ (unsigned)&PIE1*8+7;

volatile bit ADIE @ (unsigned)&PIE1*8+6;
volatile bit RCIE @ (unsigned)&PIE1*8+5;
volatile bit TXIE @ (unsigned)&PIE1*8+4;
volatile bit SSPIE @ (unsigned)&PIE1*8+3;
volatile bit CCP1IE @ (unsigned)&PIE1*8+2;
volatile bit TMR2IE @ (unsigned)&PIE1*8+1;
volatile bit TMR1IE @ (unsigned)&PIE1*8+0;


volatile bit CMIE @ (unsigned)&PIE2*8+6;
volatile bit EEIE @ (unsigned)&PIE2*8+4;
volatile bit BCLIE @ (unsigned)&PIE2*8+3;
volatile bit CCP2IE @ (unsigned)&PIE2*8+0;


volatile bit POR @ (unsigned)&PCON*8+1;
volatile bit BOR @ (unsigned)&PCON*8+0;


volatile bit GCEN @ (unsigned)&SSPCON2*8+7;
volatile bit ACKSTAT @ (unsigned)&SSPCON2*8+6;
volatile bit ACKDT @ (unsigned)&SSPCON2*8+5;
volatile bit ACKEN @ (unsigned)&SSPCON2*8+4;
volatile bit RCEN @ (unsigned)&SSPCON2*8+3;
volatile bit PEN @ (unsigned)&SSPCON2*8+2;
volatile bit RSEN @ (unsigned)&SSPCON2*8+1;
volatile bit SEN @ (unsigned)&SSPCON2*8+0;


volatile bit SMP @ (unsigned)&SSPSTAT*8+7;
volatile bit CKE @ (unsigned)&SSPSTAT*8+6;
volatile bit DA @ (unsigned)&SSPSTAT*8+5;
volatile bit STOP @ (unsigned)&SSPSTAT*8+4;
volatile bit START @ (unsigned)&SSPSTAT*8+3;
volatile bit RW @ (unsigned)&SSPSTAT*8+2;
volatile bit UA @ (unsigned)&SSPSTAT*8+1;
volatile bit BF @ (unsigned)&SSPSTAT*8+0;

# 352
volatile bit CSRC @ (unsigned)&TXSTA*8+7;
volatile bit TX9 @ (unsigned)&TXSTA*8+6;
volatile bit TXEN @ (unsigned)&TXSTA*8+5;
volatile bit SYNC @ (unsigned)&TXSTA*8+4;
volatile bit BRGH @ (unsigned)&TXSTA*8+2;
volatile bit TRMT @ (unsigned)&TXSTA*8+1;
volatile bit TX9D @ (unsigned)&TXSTA*8+0;


volatile bit C2OUT @ (unsigned)&CMCON*8+7;
volatile bit C1OUT @ (unsigned)&CMCON*8+6;
volatile bit C2INV @ (unsigned)&CMCON*8+5;
volatile bit C1INV @ (unsigned)&CMCON*8+4;
volatile bit CIS @ (unsigned)&CMCON*8+3;
volatile bit CM2 @ (unsigned)&CMCON*8+2;
volatile bit CM1 @ (unsigned)&CMCON*8+1;
volatile bit CM0 @ (unsigned)&CMCON*8+0;


volatile bit CVREN @ (unsigned)&CVRCON*8+7;
volatile bit CVROE @ (unsigned)&CVRCON*8+6;
volatile bit CVRR @ (unsigned)&CVRCON*8+5;
volatile bit CVR3 @ (unsigned)&CVRCON*8+3;
volatile bit CVR2 @ (unsigned)&CVRCON*8+2;
volatile bit CVR1 @ (unsigned)&CVRCON*8+1;
volatile bit CVR0 @ (unsigned)&CVRCON*8+0;


volatile bit ADFM @ (unsigned)&ADCON1*8+7;
volatile bit ADCS2 @ (unsigned)&ADCON1*8+6;
volatile bit PCFG3 @ (unsigned)&ADCON1*8+3;
volatile bit PCFG2 @ (unsigned)&ADCON1*8+2;
volatile bit PCFG1 @ (unsigned)&ADCON1*8+1;
volatile bit PCFG0 @ (unsigned)&ADCON1*8+0;


volatile bit EEPGD @ (unsigned)&EECON1*8+7;
volatile bit WRERR @ (unsigned)&EECON1*8+3;
volatile bit WREN @ (unsigned)&EECON1*8+2;
volatile bit WR @ (unsigned)&EECON1*8+1;
volatile bit RD @ (unsigned)&EECON1*8+0;

# 332 "C:\Program Files (x86)\HI-TECH Software\PICC\PRO\9.65\include\pic.h"
extern unsigned int flash_read(unsigned short addr);

# 41 "C:\Program Files (x86)\HI-TECH Software\PICC\PRO\9.65\include\eeprom_routines.h"
extern void eeprom_write(unsigned char addr, unsigned char value);
extern unsigned char eeprom_read(unsigned char addr);


# 405 "C:\Program Files (x86)\HI-TECH Software\PICC\PRO\9.65\include\pic.h"
#pragma inline(_delay)
extern void _delay(unsigned long);

# 29 "X:\EMBBEDED PROJECTS\Vaisakh\mplab\lcd1.h"
void nokia_spi(unsigned char data);
void lcd_init(void);
void lcd_data(unsigned char);
void lcd_cmd(unsigned char);
void lcd_reset(void);
void lcd_gotoxy(char x,char y);
void lcd_chara(unsigned char);
void lcd_cls(void);
void delay(unsigned char x);
void lcd_str(const char *str);

# 44
static const unsigned char Lookup [][5] =
{
{ 0x00, 0x00, 0x00, 0x00, 0x00 },
{ 0x00, 0x00, 0x2f, 0x00, 0x00 },
{ 0x00, 0x07, 0x00, 0x07, 0x00 },
{ 0x14, 0x7f, 0x14, 0x7f, 0x14 },
{ 0x24, 0x2a, 0x7f, 0x2a, 0x12 },
{ 0xc4, 0xc8, 0x10, 0x26, 0x46 },
{ 0x36, 0x49, 0x55, 0x22, 0x50 },
{ 0x00, 0x05, 0x03, 0x00, 0x00 },
{ 0x00, 0x1c, 0x22, 0x41, 0x00 },
{ 0x00, 0x41, 0x22, 0x1c, 0x00 },
{ 0x14, 0x08, 0x3E, 0x08, 0x14 },
{ 0x08, 0x08, 0x3E, 0x08, 0x08 },
{ 0x00, 0x00, 0x50, 0x30, 0x00 },
{ 0x10, 0x10, 0x10, 0x10, 0x10 },
{ 0x00, 0x60, 0x60, 0x00, 0x00 },
{ 0x20, 0x10, 0x08, 0x04, 0x02 },
{ 0x3E, 0x51, 0x49, 0x45, 0x3E },
{ 0x00, 0x42, 0x7F, 0x40, 0x00 },
{ 0x42, 0x61, 0x51, 0x49, 0x46 },
{ 0x21, 0x41, 0x45, 0x4B, 0x31 },
{ 0x18, 0x14, 0x12, 0x7F, 0x10 },
{ 0x27, 0x45, 0x45, 0x45, 0x39 },
{ 0x3C, 0x4A, 0x49, 0x49, 0x30 },
{ 0x01, 0x71, 0x09, 0x05, 0x03 },
{ 0x36, 0x49, 0x49, 0x49, 0x36 },
{ 0x06, 0x49, 0x49, 0x29, 0x1E },
{ 0x00, 0x36, 0x36, 0x00, 0x00 },
{ 0x00, 0x56, 0x36, 0x00, 0x00 },
{ 0x08, 0x14, 0x22, 0x41, 0x00 },
{ 0x14, 0x14, 0x14, 0x14, 0x14 },
{ 0x00, 0x41, 0x22, 0x14, 0x08 },
{ 0x02, 0x01, 0x51, 0x09, 0x06 },
{ 0x32, 0x49, 0x59, 0x51, 0x3E },
{ 0x7E, 0x11, 0x11, 0x11, 0x7E },
{ 0x7F, 0x49, 0x49, 0x49, 0x36 },
{ 0x3E, 0x41, 0x41, 0x41, 0x22 },
{ 0x7F, 0x41, 0x41, 0x22, 0x1C },
{ 0x7F, 0x49, 0x49, 0x49, 0x41 },
{ 0x7F, 0x09, 0x09, 0x09, 0x01 },
{ 0x3E, 0x41, 0x49, 0x49, 0x7A },
{ 0x7F, 0x08, 0x08, 0x08, 0x7F },
{ 0x00, 0x41, 0x7F, 0x41, 0x00 },
{ 0x20, 0x40, 0x41, 0x3F, 0x01 },
{ 0x7F, 0x08, 0x14, 0x22, 0x41 },
{ 0x7F, 0x40, 0x40, 0x40, 0x40 },
{ 0x7F, 0x02, 0x0C, 0x02, 0x7F },
{ 0x7F, 0x04, 0x08, 0x10, 0x7F },
{ 0x3E, 0x41, 0x41, 0x41, 0x3E },
{ 0x7F, 0x09, 0x09, 0x09, 0x06 },
{ 0x3E, 0x41, 0x51, 0x21, 0x5E },
{ 0x7F, 0x09, 0x19, 0x29, 0x46 },
{ 0x46, 0x49, 0x49, 0x49, 0x31 },
{ 0x01, 0x01, 0x7F, 0x01, 0x01 },
{ 0x3F, 0x40, 0x40, 0x40, 0x3F },
{ 0x1F, 0x20, 0x40, 0x20, 0x1F },
{ 0x3F, 0x40, 0x38, 0x40, 0x3F },
{ 0x63, 0x14, 0x08, 0x14, 0x63 },
{ 0x07, 0x08, 0x70, 0x08, 0x07 },
{ 0x61, 0x51, 0x49, 0x45, 0x43 },
{ 0x00, 0x7F, 0x41, 0x41, 0x00 },
{ 0x55, 0x2A, 0x55, 0x2A, 0x55 },
{ 0x00, 0x41, 0x41, 0x7F, 0x00 },
{ 0x04, 0x02, 0x01, 0x02, 0x04 },
{ 0x40, 0x40, 0x40, 0x40, 0x40 },
{ 0x00, 0x01, 0x02, 0x04, 0x00 },
{ 0x20, 0x54, 0x54, 0x54, 0x78 },
{ 0x7F, 0x48, 0x44, 0x44, 0x38 },
{ 0x38, 0x44, 0x44, 0x44, 0x20 },
{ 0x38, 0x44, 0x44, 0x48, 0x7F },
{ 0x38, 0x54, 0x54, 0x54, 0x18 },
{ 0x08, 0x7E, 0x09, 0x01, 0x02 },
{ 0x0C, 0x52, 0x52, 0x52, 0x3E },
{ 0x7F, 0x08, 0x04, 0x04, 0x78 },
{ 0x00, 0x44, 0x7D, 0x40, 0x00 },
{ 0x20, 0x40, 0x44, 0x3D, 0x00 },
{ 0x7F, 0x10, 0x28, 0x44, 0x00 },
{ 0x00, 0x41, 0x7F, 0x40, 0x00 },
{ 0x7C, 0x04, 0x18, 0x04, 0x78 },
{ 0x7C, 0x08, 0x04, 0x04, 0x78 },
{ 0x38, 0x44, 0x44, 0x44, 0x38 },
{ 0x7C, 0x14, 0x14, 0x14, 0x08 },
{ 0x08, 0x14, 0x14, 0x18, 0x7C },
{ 0x7C, 0x08, 0x04, 0x04, 0x08 },
{ 0x48, 0x54, 0x54, 0x54, 0x20 },
{ 0x04, 0x3F, 0x44, 0x40, 0x20 },
{ 0x3C, 0x40, 0x40, 0x20, 0x7C },
{ 0x1C, 0x20, 0x40, 0x20, 0x1C },
{ 0x3C, 0x40, 0x30, 0x40, 0x3C },
{ 0x44, 0x28, 0x10, 0x28, 0x44 },
{ 0x0C, 0x50, 0x50, 0x50, 0x3C },
{ 0x44, 0x64, 0x54, 0x4C, 0x44 }
};

# 143
void lcd_init(void)
{
lcd_reset();
lcd_cmd(0xA6);
lcd_cmd(0xA2);
lcd_cmd(0xA1);
lcd_cmd(0xC0);
lcd_cmd(0x24);
lcd_cmd(0x81);
lcd_cmd(0x2E);
lcd_cmd(0x2F);
lcd_cmd(0xE3);
lcd_cmd(0x2f);
lcd_cmd(0xAF);
lcd_cmd(0xA5);
delay(50);
lcd_cmd(0xAE);
lcd_cls();
delay(10);
lcd_cmd(0xAF);
delay(30);
lcd_cmd(0xA4);
return;
}

# 172
void lcd_data(unsigned char x)
{
RB0=1;
RB1=0;


nokia_spi(x);
RB1=1;
}

# 187
void lcd_cmd(unsigned char c)
{
RB0=0;
RB1=0;

nokia_spi(c);
RB1=1;
}




void lcd_reset(void)
{
RB0=1;
RB1=1;
delay(50);
RB1=0;

delay(100);
RB1=1;

delay(250);
}



void lcd_gotoxy(char x_pos,char y_pos)
{
unsigned char col;
col=0x12+ y_pos*6;
lcd_cmd(0xB0+x_pos);
unsigned char tmp;
tmp=col>>4;
lcd_cmd(0x11|tmp);
lcd_cmd(0x0f&col);
}

# 229
void lcd_chara(unsigned char x)
{
if(x<0x20) return;
if(x>0x7f) return;

unsigned char i,char_data,char_pos;
char_pos=x-0x20;

for(i=0;i<5;i++)
{

char_data=Lookup[x-32][i];

lcd_data(char_data);
}

lcd_data(0x00);

}




void delay(unsigned char x)
{
unsigned char i=x/10;
for (char j=0;j<i;j++)
_delay((unsigned long)((10)*(_XTAL_FREQ/4000.0)));
}




void lcd_cls()
{
unsigned char page;
for(page=0;page<9;page++)
{
lcd_cmd(0xB0+page);
lcd_cmd(0x11);
lcd_cmd(0x01);
for(unsigned char x=96;x>0;x--)
lcd_data(0x00);
}
}




void lcd_str(const char *str)
{
unsigned char k=0;
while (str[k]!=0)
{
lcd_chara(str[k]);
k++;
}
}

# 293
void nokia_spi(unsigned char data )
{
for (char c=8;c>0;c--)
{
RC3=0;

if ((data&0x80)==0)
RC5=0;
else
RC5=1;


RC3=1;
data=data<<1;
}
}

# 6 "X:\EMBBEDED PROJECTS\Vaisakh\mplab\spi.h"
unsigned char byte_recieve(void);
void spi_delay(unsigned char);
void spi_sendbyte(unsigned char);

# 14
void spi_delay(unsigned char k)
{
SSPEN=1;
unsigned char tmp=k;
for(char i=0;i<tmp;i++)
{
spi_sendbyte(0xff);

}
}




void spi_sendbyte(unsigned char l)
{

char k;
_delay((unsigned long)((3)*(8000000/4000000.0)));

SSPBUF=l;

while(SSPIF==0)
{
asm("nop");
}
k=SSPBUF;

SSPIF=0;

}

# 50
char byte_recieve(void)
{

unsigned char temp;
SSPIF=0;
SSPEN=1;
spi_sendbyte(0xff);

temp=SSPBUF;
SSPIF=0;
return temp;

}

# 6 "X:\EMBBEDED PROJECTS\Vaisakh\mplab\main.c"
asm("\tpsect config,class=CONFIG,delta=2"); asm("\tdw ""0x3FFE & 0x3FFB & 0x3F7F & 0x3FBF");


void main()
{
TRISB=0x00;
TRISC=0x00;
TRISD=0x00;
lcd_init();
delay(250);


lcd_gotoxy(0,0);
lcd_str("Vaisakh P");

lcd_gotoxy(3,0);
lcd_str("Created By");

lcd_gotoxy(5,0);
lcd_str("*SEBIN C JOSEPH*");
while(1);
}
